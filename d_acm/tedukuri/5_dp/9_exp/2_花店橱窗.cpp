/*
 * 花店橱窗(二维矩阵表示：花在特定花瓶中的美观度，求最大的美观度)
 */

#include <cstdio>
#include <iostream>
using namespace std;
const int N = 106, INF = 0x7fffffff;
int n, m, a[N][N], f[N][N], d[N][N], ans[N];

int main() {
    cin >> n >> m;
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= m; j++)
            scanf("%d", &a[i][j]);
    for (int i = 1; i <= m - n + 1; i++) f[1][i] = a[1][i];
    for (int i = 2; i <= n; i++) {
        int k = -INF, t;
        for (int j = i; j <= m - n + i; j++) {
            if (k < f[i-1][j-1]) {
                k = f[i-1][j-1];
                t = j - 1;
            }
            f[i][j] = k + a[i][j];
            d[i][j] = t;
        }
    }
    int k = -INF, t;
    for (int i = n; i <= m; i++)
        if (k < f[n][i]) {
            k = f[n][i];
            t = i;
        }
    cout << k << endl;
    int w = n;
    while (t) {
        ans[w] = t;
        t = d[w--][t];
    }
    for (int i = 1; i <= n; i++) printf("%d ", ans[i]);
    puts("");
    return 0;
}

/*
 * input:
10 25
-14 -19 42 -48 0 43 -26 40 -40 39 50 -3 -8 -43 19 -44 -42 -13 -48 -22 29 43 -2 43 46
45 -48 15 0 1 10 36 33 1 39 -18 -6 -38 -28 5 -49 -29 -48 -7 -22 21 0 -13 -42 2
16 37 -6 -37 30 -11 -42 32 -46 8 -18 14 -6 -36 -35 -17 -3 10 -4 19 -36 -3 41 -34 40
-32 38 -11 6 46 42 -29 33 -15 -15 12 25 -7 -7 30 -50 26 -7 -5 41 9 28 -13 -32 -27
-45 -18 21 46 -1 11 -36 -14 -50 21 -18 42 43 -36 -23 -23 26 -49 20 -31 31 21 45 -26 -35
35 33 44 -28 -49 -33 -23 -16 38 -27 33 -2 -12 -31 -2 -41 1 -11 -49 16 17 -22 -9 18 48
11 -1 19 5 24 35 -10 7 28 12 8 45 40 42 33 -37 25 -20 2 45 29 11 -5 -32 12
-40 35 41 2 3 39 -38 -49 7 18 26 -9 -43 -18 -31 20 41 -36 10 33 47 24 8 -23 -25
2 -45 37 48 -27 -2 -43 -42 -11 10 11 -23 22 13 35 -11 -12 -24 -3 21 -5 -33 12 9 27
-5 5 0 -48 32 25 4 38 11 1 -39 -41 9 -31 -1 -32 30 26 41 -8 11 -21 31 37 27

 *
 * output:
321
6 7 8 12 13 17 20 21 23 24
 */