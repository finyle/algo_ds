<<<<<<< HEAD
# leetcode 100
1. 两数之和： 数组nums, 数字target, 返回元素和为target 的元素位置：  一次遍历，存哈希表并查表，空间换时间：O(n)
49. 字母异位词分组： 字符串数组strs, 将异位词元素合并为一组返回结果: 二维字符串数组， 一次遍历，建哈希表，存表，返回结果 O(n)
128. 最长连续序列： 数组nums， 返回最长的连续元素长度： 一次遍历， 建哈希表，判断目标元素是否存在 O(n)

283. 移动零： 数组nums，将所有元素0移动至数组末尾，且所有元素相对位置不变，无额外空间，双指针原地交换 O(n) 
11. 盛水最多的容器： 数组nums， 代表数轴高度，围成的最大矩形面积 O(n), 双指针，无需额外空间
15. 三数之和： 数组nums， 和为0的三元组， 双指针 O(n2)
h42. 接雨水： 数组nums, 代表宽度为1的矩形高度，接水面积； 双指针O(n)， 一次遍历且空间复杂度O(1)

3. 无重复字符串最长子串： 字符串s中无重复字符最长子串： 双指针一次遍历
438. 字符串中所有异位词的子串： 字符串s，p， 求s中所有p的异位词的子串的起始索引： 滑动窗口一次遍历O(m + n)

560. 和为k的子数组： 数组nums和整数k，统计并返回nums中和为k的子数组个数， 一次遍历，建哈希表 + 前缀和， 前缀和 + 哈希表优化 O(n)
h239. 滑动窗口最大值： 数组nums， k， 求nums中长度为k的滑动窗口的所有最大值 优先队列O(n(log(n))), 单调队列O(n)
h76. 最小覆盖子串: 字符串s, p; s中覆盖p的最短子串长度： O(m + n), 滑动窗口 while + for一次遍历， 复杂度计算为 m + n 

53. 最大子数组和： 数组nums，返回有最大和的子数组： dp | 分治 -> 线段树 O(n)
56. 合并区间：s 二维数组n*2的二维数组 matrix， 合并所有重叠区间, 按子区间左端点排序 O(log(n)n)
189. 轮转数组： 数组 nums, 向右折k个元素： 原地旋转 O(n) O(1)
238. 除自身以外的乘积： 数组nums, 返回ans数组，每个元素为除自身之外的所有元素乘积 O(n) 两轮遍历 前后缀分解
h41. 缺失的第一个正数： 数组nums, 返回其中没有出现的最小的正整数： O(n) O(k), 哈希表， 三轮遍历

73. 矩阵置零: 01矩阵matrix, 将0所在的行和列的元素都替换为0，标记变量 O(mn) O(1)
54. 螺旋矩阵: 矩阵matrix，顺时针螺旋遍历： O(mn) O(1), 标记变量判断是否访问过
48. 旋转图像： n*n 的矩阵，原地旋转 O(mn) O(1)
240. 搜索二维矩阵： 矩阵元素按行列有序matrix， 判断目标值target存在，O(log(m+n)) z字 + 二分

链表： 
相交链表
反转链表
回文链表
环形链表
合并两个有序链表
两数相加
删除链表的倒数第k个节点
两两交换链表中的节点
h k个一组反转链表
随机链表的复制
排序链表
h 合并k个升序链表
LRU缓存

二叉树
中序遍历
最大深度
反转二叉树
对称二叉树
二叉树的直径
二叉树的层序遍历
将有序数组转换为二叉搜索树
验证二叉树
二叉搜索树中第k小的元素
二叉树的右视图
二叉树展开为链表
从前序遍历和中序遍历构造二叉树
路径总和
二叉树最近公共祖先
h 二叉树中的最大路径和

图 
200. 岛屿数量: 01矩阵matrix， 1上下左右相连的连通块数： dfs, bfs, uf O(mn)
994. 腐烂的橘子： 012矩阵matrix, 1好橘子2烂橘子，上下左右相连传递：所有橘子都变烂的最短时间：bfs O(mn)
207. 课程表：n * 2的矩阵，表示课程先后关系，判断有向图中受否存在环：bfs, dfs O(m+n) 
208. 实现Trie树(Trie): 实现前缀树： insert, search, serachPrefix, 前缀区间查询 O(1)

回溯
46. 全排列：数组nums 元素全排列， 全排列枚举 O(n * n!)
78. 子集：数组nums 元素子序列， 组合枚举 O(n * 2^n)
17. 电话号码的字母组合： O(3^m + 4^n)
39. 组合总数： 数组nums， target 数组中元素和为target 的元素组合总数 O(n * 2^n)
22. 括号生成: 生成n对有效括号的组合数：O(n * 2^n)
79. 单词搜索: 字符矩阵matrix， 目标字符串target存在？dfs + prune，上下左右相邻：O(mn * 3^l)
分割回文串
h N皇后： 返回所有符合规则的n皇后二维矩阵： n*n， q不能在同行列对角线上 O(n!)

二分
35. 搜索插入位置: 数组nums，升序，目标值target在数组中的位置： O(log(n))
74. 搜索二维矩阵: 矩阵matrix， z字形升序，目标是target是否存在： O(log(mn))
34. 在排序数组中查找元素的第一个和最后一个位置： 数组nums， 升序，目标值target在排序数组出现的收尾位置O(log(n))
153. 搜索旋转排序数组 数组nums，升序后按k折叠，目标taget位置： O(log(n))
寻找需按照排序数组中的最小值
h 4. 寻找两个正序数组的中位数: 两个正序数组的中位数 O(log(m + n))

栈
20. 有效括号： 字符串s， 判断其中所有元素是否恰好构成成对括号： O(n) 卡特兰数
151. 最小栈: 设计栈的getMin方法， O(1)， 单调辅助栈
394. 字符串解码： 字符串s解析 “3[s]" 重复s三次：辅助栈O(n)
739. 每日温度: 数组nums 表示每日温度，对每个位置返回下一个更大的位置的最近距离 O(n) 单调栈
h 84. 柱状图中最大矩形： 数组nums， 表示宽度为1的矩形高度，返回构成的最大矩形面积 O(n) 单调栈

堆
215. 数组中的第k个最大元素： 数组nums中第k大的元素, O(n)快排，O(n(log(n)))堆排
347. 前k个高频元素： 数组nusm中出现频率前k高的元素，快排，堆排 O(n(log(k)))
295. 数据流中的中位数： 返回当前数组nums中的中位数， O(n) 辅助队列(优先队列)

贪心
买卖股票的最佳时机: 
跳跃游戏
跳跃游戏2
划分字母区间

dp
爬楼梯
杨辉三角
打家劫舍
完全平方数
零钱兑换
单词拆分
最长递增子序列
乘积最大的子数组
分割等和子集
h 最长有效括号

不同路径
最小路径和
最长回文子串
最长公共子序列
编辑距离

位运算
只出现一次的数字
多数元素
颜色分类
下一个排列
寻找重复数

# leetcode 75

# leetcode 150

#################################################
# 并发编程：

# 互斥同步样例： lock
# 1114. 按序打印: foobar
# 1115. 交替打印 FooBar: for_range
# 1116. 打印零与奇偶数: zeroEvenOdd
# 1117. H2O 生成: hydrogen2, oxygen1, barrier;
# 1195. 交替打印字符串: fizzBuzz, %3, %5

# 并发安全的数据结构：
# 1188. 设计有限阻塞队列: push, pop, size, get

# 死锁样例：
# 1226. 哲学家进餐: uid, pickleftfork, pickright, putleft, putrigght
# 1279. 红绿灯路口: deadlock

# 线程池样例 -> mapreduce(批任务处理框架) , 异步任务 -> 并行编程
# 1242. 多线程网页爬虫: existCheck
# 烧水泡茶
# wordcount MR


=======
# leetcode 100
1. 两数之和： 数组nums, 数字target, 返回元素和为target 的元素位置：  一次遍历，存哈希表并查表，空间换时间：O(n)
49. 字母异位词分组： 字符串数组strs, 将异位词元素合并为一组返回结果: 二维字符串数组， 一次遍历，建哈希表，存表，返回结果 O(n)
128. 最长连续序列： 数组nums， 返回最长的连续元素长度： 一次遍历， 建哈希表，判断目标元素是否存在 O(n)

283. 移动零： 数组nums，将所有元素0移动至数组末尾，且所有元素相对位置不变，无额外空间，双指针原地交换 O(n) 
11. 盛水最多的容器： 数组nums， 代表数轴高度，围成的最大矩形面积 O(n), 双指针，无需额外空间
15. 三数之和： 数组nums， 和为0的三元组， 双指针 O(n2)
h42. 接雨水： 数组nums, 代表宽度为1的矩形高度，接水面积； 双指针O(n)， 一次遍历且空间复杂度O(1)

3. 无重复字符串最长子串： 字符串s中无重复字符最长子串： 双指针一次遍历
438. 字符串中所有异位词的子串： 字符串s，p， 求s中所有p的异位词的子串的起始索引： 滑动窗口一次遍历O(m + n)

560. 和为k的子数组： 数组nums和整数k，统计并返回nums中和为k的子数组个数， 一次遍历，建哈希表 + 前缀和， 前缀和 + 哈希表优化 O(n)
h239. 滑动窗口最大值： 数组nums， k， 求nums中长度为k的滑动窗口的所有最大值 优先队列O(n(log(n))), 单调队列O(n)
h76. 最小覆盖子串: 字符串s, p; s中覆盖p的最短子串长度： O(m + n), 滑动窗口 while + for一次遍历， 复杂度计算为 m + n 

53. 最大子数组和： 数组nums，返回有最大和的子数组： dp | 分治 -> 线段树 O(n)
56. 合并区间：s 二维数组n*2的二维数组 matrix， 合并所有重叠区间, 按子区间左端点排序 O(log(n)n)
189. 轮转数组： 数组 nums, 向右折k个元素： 原地旋转 O(n) O(1)
238. 除自身以外的乘积： 数组nums, 返回ans数组，每个元素为除自身之外的所有元素乘积 O(n) 两轮遍历 前后缀分解
h41. 缺失的第一个正数： 数组nums, 返回其中没有出现的最小的正整数： O(n) O(k), 哈希表， 三轮遍历

73. 矩阵置零: 01矩阵matrix, 将0所在的行和列的元素都替换为0，标记变量 O(mn) O(1)
54. 螺旋矩阵: 矩阵matrix，顺时针螺旋遍历： O(mn) O(1), 标记变量判断是否访问过
48. 旋转图像： n*n 的矩阵，原地旋转 O(mn) O(1)
240. 搜索二维矩阵： 矩阵元素按行列有序matrix， 判断目标值target存在，O(log(m+n)) z字 + 二分

链表： 
相交链表
反转链表
回文链表
环形链表
合并两个有序链表
两数相加
删除链表的倒数第k个节点
两两交换链表中的节点
h k个一组反转链表
随机链表的复制
排序链表
h 合并k个升序链表
LRU缓存

二叉树
中序遍历
最大深度
反转二叉树
对称二叉树
二叉树的直径
二叉树的层序遍历
将有序数组转换为二叉搜索树
验证二叉树
二叉搜索树中第k小的元素
二叉树的右视图
二叉树展开为链表
从前序遍历和中序遍历构造二叉树
路径总和
二叉树最近公共祖先
h 二叉树中的最大路径和

图 
200. 岛屿数量: 01矩阵matrix， 1上下左右相连的连通块数： dfs, bfs, uf O(mn)
994. 腐烂的橘子： 012矩阵matrix, 1好橘子2烂橘子，上下左右相连传递：所有橘子都变烂的最短时间：bfs O(mn)
207. 课程表：n * 2的矩阵，表示课程先后关系，判断有向图中受否存在环：bfs, dfs O(m+n) 
208. 实现Trie树(Trie): 实现前缀树： insert, search, serachPrefix, 前缀区间查询 O(1)

回溯
46. 全排列：数组nums 元素全排列， 全排列枚举 O(n * n!)
78. 子集：数组nums 元素子序列， 组合枚举 O(n * 2^n)
17. 电话号码的字母组合： O(3^m + 4^n)
39. 组合总数： 数组nums， target 数组中元素和为target 的元素组合总数 O(n * 2^n)
22. 括号生成: 生成n对有效括号的组合数：O(n * 2^n)
79. 单词搜索: 字符矩阵matrix， 目标字符串target存在？dfs + prune，上下左右相邻：O(mn * 3^l)
分割回文串
h N皇后： 返回所有符合规则的n皇后二维矩阵： n*n， q不能在同行列对角线上 O(n!)

二分
35. 搜索插入位置: 数组nums，升序，目标值target在数组中的位置： O(log(n))
74. 搜索二维矩阵: 矩阵matrix， z字形升序，目标是target是否存在： O(log(mn))
34. 在排序数组中查找元素的第一个和最后一个位置： 数组nums， 升序，目标值target在排序数组出现的收尾位置O(log(n))
153. 搜索旋转排序数组 数组nums，升序后按k折叠，目标taget位置： O(log(n))
寻找需按照排序数组中的最小值
h 4. 寻找两个正序数组的中位数: 两个正序数组的中位数 O(log(m + n))

栈
20. 有效括号： 字符串s， 判断其中所有元素是否恰好构成成对括号： O(n) 卡特兰数
151. 最小栈: 设计栈的getMin方法， O(1)， 单调辅助栈
394. 字符串解码： 字符串s解析 “3[s]" 重复s三次：辅助栈O(n)
739. 每日温度: 数组nums 表示每日温度，对每个位置返回下一个更大的位置的最近距离 O(n) 单调栈
h 84. 柱状图中最大矩形： 数组nums， 表示宽度为1的矩形高度，返回构成的最大矩形面积 O(n) 单调栈

堆
215. 数组中的第k个最大元素： 数组nums中第k大的元素, O(n)快排，O(n(log(n)))堆排
347. 前k个高频元素： 数组nusm中出现频率前k高的元素，快排，堆排 O(n(log(k)))
295. 数据流中的中位数： 返回当前数组nums中的中位数， O(n) 辅助队列(优先队列)

贪心
买卖股票的最佳时机: 
跳跃游戏
跳跃游戏2
划分字母区间

dp
爬楼梯
杨辉三角
打家劫舍
完全平方数
零钱兑换
单词拆分
最长递增子序列
乘积最大的子数组
分割等和子集
h 最长有效括号

不同路径
最小路径和
最长回文子串
最长公共子序列
编辑距离

位运算
只出现一次的数字
多数元素
颜色分类
下一个排列
寻找重复数

# leetcode 75

# leetcode 150

################################################
# 1114. 按序打印: foobar

# 1115. 交替打印 FooBar: for_range

# 1116. 打印零与奇偶数: zeroEvenOdd

# 1117. H2O 生成: hydrogen2, oxygen1, barrier; 

# 1188. 设计有限阻塞队列: push, pop, size, get

# 1195. 交替打印字符串: fizzBuzz, %3, %5

# 1226. 哲学家进餐: uid, pickleftfork, pickright, putleft, putrigght

# 1242. 多线程网页爬虫: existCheck

# 1279. 红绿灯路口: deadlock 
>>>>>>> d2cf9d11bdcb024015f36837ba48c64d5f38c888
